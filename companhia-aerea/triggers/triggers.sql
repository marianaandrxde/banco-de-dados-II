    CREATE OR REPLACE FUNCTION T_VALIDACAO_USUARIO()
    RETURNS TRIGGER AS $$
    BEGIN
        IF NOT VALIDAR_EMAIL(NEW.EMAIL) THEN
            RAISE EXCEPTION 'E-mail % é inválido.', NEW.EMAIL;
        END IF;

        IF NOT VALIDAR_TELEFONE(NEW.TELEFONE) THEN
            RAISE EXCEPTION 'Telefone % é inválido.', NEW.TELEFONE;
        END IF;

        IF NOT VALIDAR_CPF(NEW.CPF) THEN
            RAISE EXCEPTION 'CPF % é inválido.', NEW.CPF;
        END IF;

        RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;

    CREATE OR REPLACE TRIGGER TRIGGER_VALIDACAO_USUARIO BEFORE INSERT OR UPDATE ON USUARIO FOR EACH ROW EXECUTE PROCEDURE T_VALIDACAO_USUARIO();

    /*
    TRIGGER PARA GARANTIR QUE UMA ÚNICA PESSOA SE ASSOCIE A NO MÁXIMO 1 LINHA NA TABELA ITEM_PASSAGEM QUE FAÇA REFERÊNCIA A
    1 LINHA DA TABELA RESERVA
    POR EXEMPLO, NÃO PERMITIR QUE 1 USUÁRIO FAÇA UMA RESERVA, COMPRE 5 PASSAGENS DE 1 VOO E ESTEJA ASSOCIADO A TODAS ELAS. É NECESSÁRIO INFORMAR
    IDENTIFICAÇÕES DIFERENTES (CPFs) PARA CADA ASSENTO
    */

    /*
    TRIGGER PARA PERMITIR O CADASTRO DE 1 TRAJETO SOMENTE SE O VALOR DA DISTÂNCIA ESTIVER COMPREENDIDA ENTRE OS INTERVALOS DA TABELA CUSTO_KM.
    CASO CONTRÁRIO, SERÁ LANÇADA UM ERRO INDICANDO QUE A COMPANHIA NÃO FAZ VOO PARA A DISTÂNCIA ESPECIFICADA.
    */

    /*
    TRIGGER PARA ATUALIZAR O STATUS DE UM ASSENTO
    SEMPRE QUE UM ASSENTO FOR RESERVADO, OU SEJA SEMPRE QUE HOUVER UM INSERT NA TABELA ITEM_RESERVA DEVERÁ HAVER A ATUALIZAÇÃO DO STATUS DO ASSENTO
    PARA TRUE NA TABELA AVIAO_ASSENTO_CLASSE_VOO, INDICANDO QUE ESTÁ OCUPADO
    */

    /*
    TRIGGER PARA ATUALIZAR O VALOR TOTAL DA RESERVA DA TABELA RESERVA SEMPRE QUE FOR FEITO UM INSERT NA TABELA ITEM_RESERVA QUE REFERENCIE O
     ID DA RESERVA.
    */