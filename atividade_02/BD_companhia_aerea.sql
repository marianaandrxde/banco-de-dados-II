	CREATE TABLE USUARIO (
		ID_USUARIO SERIAL PRIMARY KEY,
		NOME VARCHAR(50) NOT NULL,
		DT_NASC DATE NOT NULL,
		EMAIL VARCHAR(50) NOT NULL
	);

	CREATE TABLE CLASSE (
		ID_CLASSE SERIAL PRIMARY KEY,
		NOME VARCHAR(50) NOT NULL,
		DESCRICAO VARCHAR(50) NOT NULL,
		VALOR FLOAT NOT NULL
	);

	CREATE TABLE AVIAO (
		ID_AVIAO SERIAL PRIMARY KEY,
		NOME VARCHAR(50) NOT NULL,
		DESCRICAO VARCHAR(50) NOT NULL
	);

	CREATE TABLE ASSENTO (
		ID_ASSENTO INT NOT NULL PRIMARY KEY
	);

	CREATE TABLE AVIAO_ASSENTO_CLASSE (
		ID_AVIAO_ASSENTO_CLASSE SERIAL PRIMARY KEY,
		ID_AVIAO INT NOT NULL,
		ID_ASSENTO INT NOT NULL,
		ID_CLASSE INT NOT NULL,
		LOCALIZACAO VARCHAR(20) NOT NULL,
		CONSTRAINT FK_AVIAO FOREIGN KEY(ID_AVIAO) REFERENCES AVIAO(ID_AVIAO),
		CONSTRAINT FK_ASSENTO FOREIGN KEY(ID_ASSENTO) REFERENCES ASSENTO(ID_ASSENTO),
		CONSTRAINT FK_CLASSE FOREIGN KEY(ID_CLASSE) REFERENCES CLASSE(ID_CLASSE)
	);

	CREATE TABLE CIDADE (
		ID_CIDADE SERIAL PRIMARY KEY,
		NOME VARCHAR(20),
		LOCALIZACAO VARCHAR(50)
	);

	CREATE TABLE TRAJETO (
		ID_TRAJETO SERIAL PRIMARY KEY,
		ID_ORIGEM INT NOT NULL,
		ID_DESTINO INT NOT NULL,
		DISTANCIA_KM INT NOT NULL,
		VALOR_TRAJETO INT NOT NULL,
		CONSTRAINT FK_ORIGEM FOREIGN KEY(ID_ORIGEM) REFERENCES CIDADE(ID_CIDADE),
		CONSTRAINT FK_DESTINO FOREIGN KEY(ID_DESTINO) REFERENCES CIDADE(ID_CIDADE)
	);

	CREATE TABLE CUSTO_KM (
		ID_CUSTO_KM SERIAL PRIMARY KEY,
		KM_MINIMO INT NOT NULL,
		KM_MAXIMO INT NOT NULL,
		VALOR FLOAT NOT NULL
	);

	CREATE TABLE VOO (
		ID_VOO SERIAL PRIMARY KEY,
		ID_AVIAO INT NOT NULL,
		ID_TRAJETO INT NOT NULL,
		DATA_VOO DATE NOT NULL,
		HORARIO_SAIDA TIME,
		HORARIO_PREV_CHEGADA TIME,
		CONSTRAINT FK_AVIAO FOREIGN KEY(ID_AVIAO) REFERENCES AVIAO(ID_AVIAO),
		CONSTRAINT FK_TRAJETO FOREIGN KEY(ID_TRAJETO) REFERENCES TRAJETO(ID_TRAJETO)
	);

	CREATE TABLE PASSAGEM (
		ID_PASSAGEM SERIAL PRIMARY KEY,
		ID_USUARIO INT NOT NULL,
		DATA_COMPRA DATE,
		HORA_COMPRA TIME
	);

	CREATE TABLE ITEM_PASSAGEM (
		ID_ITEM_PASSAGEM SERIAL PRIMARY KEY,
		ID_PASSAGEM INT NOT NULL,
		ID_VOO INT NOT NULL,
		ID_AVIAO_ASSENTO_CLASSE INT NOT NULL,
		VALOR FLOAT NOT NULL,
		CONSTRAINT FK_VOO FOREIGN KEY(ID_VOO) REFERENCES VOO(ID_VOO),
		CONSTRAINT FK_PASSAGEM FOREIGN KEY(ID_PASSAGEM) REFERENCES PASSAGEM(ID_PASSAGEM),
		CONSTRAINT FK_AAC FOREIGN KEY(ID_AVIAO_ASSENTO_CLASSE) REFERENCES AVIAO_ASSENTO_CLASSE(ID_AVIAO_ASSENTO_CLASSE)
	);

	CREATE OR REPLACE FUNCTION cadastrar_dados(
		tabela_nome VARCHAR,  -- Nome da tabela onde os dados serão inseridos
		colunas TEXT,         -- Lista de colunas onde os dados serão inseridos (ex: 'coluna1, coluna2')
		valores TEXT          -- Lista de valores a serem inseridos (ex: '''valor1'', ''valor2''')
	) 
	RETURNS VOID 
	AS $$
	DECLARE
		sql_query TEXT;
	BEGIN
		-- Construir o comando SQL dinâmico
		sql_query := FORMAT('INSERT INTO %I (%s) VALUES (%s)', tabela_nome, colunas, valores);

		-- Executar o comando SQL dinâmico
		EXECUTE sql_query;
	END;
	$$
	LANGUAGE plpgsql;


	SELECT cadastrar_dados(
		'USUARIO',                     -- Nome da tabela
		'NOME, DT_NASC, EMAIL',        -- Colunas onde os dados serão inseridos
		'''João Silva'', ''1990-05-15'', ''joao.silva@example.com'''  -- Valores a serem inseridos
	);
